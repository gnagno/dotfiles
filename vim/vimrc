" ================ General Settings  =================

syntax on 
colorscheme ignazio

set number
set cursorline cursorcolumn
set hlsearch              " highlight search results
set showmatch             " show matching brachets
set scrolloff=8           " set 8 lines to the cursor when moving vertical
set sidescrolloff=15
set sidescroll=1
set tabstop=2
set shiftwidth=2
set expandtab
set nocompatible          " Disable vi-compatibility
set laststatus=2          " Always show the statusline
set encoding=utf-8        " Necessary to show Unicode glyphs
set t_Co=256              " Explicitly tell Vim that the terminal supports 256 colors

set autoread              " reloads the file if changed

let mapleader=','

" ================ Search Settings  =================

set incsearch             " Find the next match as we type the search
set hlsearch              " Hilight searches by default
set ignorecase            " Ignore case when searching...
set smartcase             " ...unless we type a capital
map <leader>h :nohl<cr> " clear the highlight

" ================ Key mappings  =================
" :nmap for normal mode mappings
" :vmap for visual mode mappings
" :imap for insert mode mappings

map <C-f> :e.<cr> " CTRL+f open file browser
map <C-b> :BufExplorer<cr>

" ================ Tab management mappings =================

map <C-up> :tabr<cr>
map <C-down> :tabl<cr>
map <C-left> :tabp<cr>
map <C-right> :tabn<cr>
map <C-n> :tabnew<cr>
map <C-w> :tabclose<cr>

" split windows mappings
map <A-Up> :wincmd k<CR>
map <A-Down> :wincmd j<CR>
map <A-Left> :wincmd h<CR>
map <A-Right> :wincmd l<CR>
" the next four are now working, I would prefear to move with Alt+letters
map <A-k> :wincmd k<CR>
map <A-j> :wincmd j<CR>
map <A-h> :wincmd h<CR>
map <A-l> :wincmd l<CR>

if exists(":Tabularize")
  nmap \t= :Tabularize /=<CR>
  vmap \t= :Tabularize /=<CR>
  nmap \t: :Tabularize /:\zs<CR>
  vmap \t: :Tabularize /:\zs<CR>
  nmap \t> :Tabularize /=><CR>
  vmap \t> :Tabularize /=><CR>
endif

" Will allow to use :w!! to write to a file using sudo if you forgot to sudo vim file
cmap w!! %!sudo tee > /dev/null %

" =============== Vundle Initialization ===============
" " This loads all the plugins specified in ~/.dotfiles/vim/vundle.vim
" " Use Vundle plugin to manage all other plugins
if filereadable(expand("~/.dotfiles/vim/vundles.vim"))
  source ~/.dotfiles/vim/vundles.vim
endif

" automatically reload configuration when I modify .vimrc
augroup reload_vimrc " {
    autocmd!
    autocmd BufWritePost $MYVIMRC source $MYVIM.RC
    augroup END " }

let g:Powerline_symbols = 'unicode'
let ruby_space_errors = 1

" ================ Screen settings =================

let g:ScreenImpl = 'Tmux'
let g:ScreenShellTmuxInitArgs = '-2'
let g:ScreenShellInitialFocus = 'shell'
let g:ScreenShellQuitOnVimExit = 0
map <F5> :ScreenShellVertical<CR>
command -nargs=? -complete=shellcmd W  :w | :call ScreenShellSend("load '".@%."';")
map <Leader>r :w<CR> :call ScreenShellSend("rspec ".@% . ':' . line('.'))<CR>
map <Leader>e :w<CR> :call ScreenShellSend("cucumber --format=pretty ".@% . ':' . line('.'))<CR>
map <Leader>b :w<CR> :call ScreenShellSend("break ".@% . ':' . line('.'))<CR>

" ================ Turn Off Swap Files ==============

 set noswapfile
 set nobackup
 set nowb

" ================ Persistent Undo ==================
" Keep undo history across sessions, by storing in file.
" Only works all the time.
"
silent !mkdir ~/.vim/backups > /dev/null 2>&1
set undodir=~/.vim/backups
set undofile
